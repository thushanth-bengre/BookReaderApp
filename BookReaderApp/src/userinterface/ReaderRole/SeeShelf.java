/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ReaderRole;

import Business.EcoSystem;
import Business.Shelf.Shelf;
import Business.Shelf.ShelfItem;
import Business.UserAccount.Readers;
import Business.WorkQueue.FollowRequest;
import Business.WorkQueue.Message;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Minal
 */
public class SeeShelf extends javax.swing.JPanel {

    /**
     * Creates new form SeeShelf
     */
    
    private JPanel userProcessContainer;
    private Readers account;
    private Shelf shelf;
    private EcoSystem business;
    public SeeShelf(JPanel userProcessContainer, Readers account, EcoSystem business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.business=business;
        shelf = account.getShelf();
        populateTables();
        btnMoveToRead.setEnabled(false);
        btnMoveToReading.setEnabled(false);
        btnMoveToToReadList.setEnabled(false);
        btnRemove.setEnabled(false);
    }    
    
    public void populateTables(){
        DefaultTableModel modelRead = (DefaultTableModel) tblRead.getModel();
        DefaultTableModel modelToRead = (DefaultTableModel) tblToRead.getModel();
        DefaultTableModel modelReading = (DefaultTableModel) tblReading.getModel();

        modelRead.setRowCount(0);
        modelToRead.setRowCount(0);
        modelReading.setRowCount(0);
        for (ShelfItem si: shelf.getShelfList()) {
            if(ShelfItem.Status.Read == si.getStatus()){
                Object[] row = new Object[4];
                row[0] = si;   
                row[1] = si.getYearCompleted();
                row[2] = si.getTitle().getAuthor();
                row[3] = si.getRating();
                modelRead.addRow(row);
            }else if(ShelfItem.Status.Reading == si.getStatus()){
               Object[] row = new Object[3];
                row[0] = si;
                row[1] = si.getTitle().getAuthor();
                row[2] = si.getTitle().getRating();
                modelReading.addRow(row); 
            }else if(ShelfItem.Status.ToRead == si.getStatus()){
               Object[] row = new Object[4];
                row[0] = si;
                row[1] = si.getTitle().getCatagory();
                row[2] = si.getTitle().getAuthor();
                row[3] = si.getTitle().getRating();
                modelToRead.addRow(row); 
            }
           
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblToRead = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRead = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblReading = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnUpdateShelf = new javax.swing.JButton();
        btnMoveToRead = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnMoveToReading = new javax.swing.JButton();
        btnConnectWithAuthor = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        btnAddBooks = new javax.swing.JButton();
        btnMoveToToReadList = new javax.swing.JButton();
        jButtonShowMoreInfo = new javax.swing.JButton();

        tblToRead.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Catagory", "Author", "Overall Ratings"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblToRead);
        if (tblToRead.getColumnModel().getColumnCount() > 0) {
            tblToRead.getColumnModel().getColumn(0).setResizable(false);
            tblToRead.getColumnModel().getColumn(1).setResizable(false);
            tblToRead.getColumnModel().getColumn(2).setResizable(false);
            tblToRead.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Digital Shelf");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Read List");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tblRead.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Year Completed", "Author", "My Ratings"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRead);
        if (tblRead.getColumnModel().getColumnCount() > 0) {
            tblRead.getColumnModel().getColumn(0).setResizable(false);
            tblRead.getColumnModel().getColumn(1).setResizable(false);
            tblRead.getColumnModel().getColumn(2).setResizable(false);
            tblRead.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Currently Reading");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tblReading.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Author", "Overall Rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblReading);
        if (tblReading.getColumnModel().getColumnCount() > 0) {
            tblReading.getColumnModel().getColumn(0).setResizable(false);
            tblReading.getColumnModel().getColumn(1).setResizable(false);
            tblReading.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("To Read list");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnUpdateShelf.setText("Update Shelf");
        btnUpdateShelf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateShelfActionPerformed(evt);
            }
        });

        btnMoveToRead.setText("Move to read list");
        btnMoveToRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveToReadActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnMoveToReading.setText("Move to reading list");
        btnMoveToReading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveToReadingActionPerformed(evt);
            }
        });

        btnConnectWithAuthor.setText("Connect with Author");
        btnConnectWithAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectWithAuthorActionPerformed(evt);
            }
        });

        btnBack1.setText("<<Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        btnAddBooks.setText("Add Books");
        btnAddBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBooksActionPerformed(evt);
            }
        });

        btnMoveToToReadList.setText("Move to To-Read List");
        btnMoveToToReadList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveToToReadListActionPerformed(evt);
            }
        });

        jButtonShowMoreInfo.setText("Show More Info");
        jButtonShowMoreInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowMoreInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMoveToRead, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMoveToToReadList))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(317, 317, 317))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnUpdateShelf, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(111, 111, 111))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack1)
                        .addGap(362, 362, 362)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnConnectWithAuthor)
                                .addGap(253, 253, 253)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnMoveToReading))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonShowMoreInfo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnRemove)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack1))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateShelf)
                    .addComponent(btnAddBooks))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMoveToReading)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnConnectWithAuthor)
                                .addComponent(jButtonShowMoreInfo)
                                .addComponent(btnRemove)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMoveToToReadList)
                    .addComponent(btnMoveToRead))
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int selectedRowValue = tblToRead.getSelectedRow();
        if(selectedRowValue >= 0){
            ShelfItem si = (ShelfItem)tblToRead.getValueAt(selectedRowValue, 0);
            shelf.delete(si);
            JOptionPane.showMessageDialog(null,"Book removed from shelf");
        }else{
            JOptionPane.showMessageDialog(null,"Please select a Book to remove");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnMoveToReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveToReadActionPerformed
        // TODO add your handling code here:
        int selectedRowValue = tblReading.getSelectedRow();
        if(selectedRowValue >= 0){
        try{
        ShelfItem si = (ShelfItem)tblReading.getValueAt(selectedRowValue, 0);
        String[] ratingsValues = {"0.5","1.0","1.5","2.0","2.5","3.0","3.5","4.0","4.5","5.0"};
        String ratings = (String) JOptionPane.showInputDialog(null, "Your Ratings", "Ratings", JOptionPane.QUESTION_MESSAGE, null, ratingsValues, ratingsValues[0]);
        double rating = Double.valueOf(ratings);
        String review = JOptionPane.showInputDialog(null,"Enter your review for the book","Review",JOptionPane.QUESTION_MESSAGE);
        String year = JOptionPane.showInputDialog(null,"Year you completed reading this book!","Year",JOptionPane.QUESTION_MESSAGE);
        int yearCompleted = Integer.valueOf(year);        
        shelf.moveBookToRead(si);
        si.setRating(rating);
        si.setReview(review);
        si.setYearCompleted(yearCompleted);
        JOptionPane.showMessageDialog(null,"Book moved");
        populateTables();        
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Wrong values entered. Try again!");
        }
        }else{
            JOptionPane.showMessageDialog(null,"Please select a Book to move");
        }
    }//GEN-LAST:event_btnMoveToReadActionPerformed

    private void btnUpdateShelfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateShelfActionPerformed
        // TODO add your handling code here:
        btnMoveToRead.setEnabled(true);
        btnMoveToReading.setEnabled(true);
        btnMoveToToReadList.setEnabled(true);
        btnRemove.setEnabled(true);
    }//GEN-LAST:event_btnUpdateShelfActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnAddBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBooksActionPerformed
        // TODO add your handling code here:
        AddBooksToShelfJPanel addBooksToShelfJPanel = new AddBooksToShelfJPanel(userProcessContainer, account,business);
        userProcessContainer.add("AddBooksToShelfJPanel", addBooksToShelfJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddBooksActionPerformed

    private void btnMoveToToReadListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveToToReadListActionPerformed
        // TODO add your handling code here:
        int selectedRowValue = tblReading.getSelectedRow();
        if(selectedRowValue >= 0){
            ShelfItem si = (ShelfItem)tblReading.getValueAt(selectedRowValue, 0);
            shelf.moveBookToToRead(si);
            populateTables();
            JOptionPane.showMessageDialog(null,"Book moved");
        }else{
            JOptionPane.showMessageDialog(null,"Please select a Book to Move");
        }
    }//GEN-LAST:event_btnMoveToToReadListActionPerformed

    private void btnMoveToReadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveToReadingActionPerformed
        // TODO add your handling code here:
        int selectedRowValue = tblToRead.getSelectedRow();
        if(selectedRowValue >= 0){
            ShelfItem si = (ShelfItem)tblToRead.getValueAt(selectedRowValue, 0);
            shelf.moveBookToReading(si);
            populateTables();
            JOptionPane.showMessageDialog(null,"Book moved");
        }else{
            JOptionPane.showMessageDialog(null,"Please select a Book to Move");
        }
    }//GEN-LAST:event_btnMoveToReadingActionPerformed

    private void btnConnectWithAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectWithAuthorActionPerformed
        // TODO add your handling code here:
        int selectedRowValue = tblRead.getSelectedRow();
        if(selectedRowValue >= 0){
            ShelfItem si = (ShelfItem)tblRead.getValueAt(selectedRowValue, 0);
            if(si.getTitle().getAuthor().isIsAuthorAccountCreated()){
                ConnectWIthAuthorJPanel connectWIthAuthorJPanel = new ConnectWIthAuthorJPanel(userProcessContainer, account,si);
                userProcessContainer.add("ConnectWIthAuthorJPanel", connectWIthAuthorJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }else{
                JOptionPane.showMessageDialog(null,"The author of this book is not yet registered to our system!!");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please select a Book to connect with author");
        }
        
    }//GEN-LAST:event_btnConnectWithAuthorActionPerformed

    private void jButtonShowMoreInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowMoreInfoActionPerformed
        // TODO add your handling code here:
        int selectedRowValue = tblRead.getSelectedRow();
        if(selectedRowValue >= 0){
            ShelfItem si = (ShelfItem)tblRead.getValueAt(selectedRowValue, 0);            
                MyBookReviewJPanel myBookReviewJPanel = new MyBookReviewJPanel(userProcessContainer, account,si);
                userProcessContainer.add("MyBookReviewJPanel", myBookReviewJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);            
        }else{
            JOptionPane.showMessageDialog(null,"Please select a Book!");
        }
    }//GEN-LAST:event_jButtonShowMoreInfoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBooks;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnConnectWithAuthor;
    private javax.swing.JButton btnMoveToRead;
    private javax.swing.JButton btnMoveToReading;
    private javax.swing.JButton btnMoveToToReadList;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdateShelf;
    private javax.swing.JButton jButtonShowMoreInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblRead;
    private javax.swing.JTable tblReading;
    private javax.swing.JTable tblToRead;
    // End of variables declaration//GEN-END:variables
}
