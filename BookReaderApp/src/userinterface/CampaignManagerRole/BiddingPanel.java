/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CampaignManagerRole;

import Business.Books.Catagory;
import Business.Campaign.NewBookCampaign;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CampaignManager;
import Business.Organization.Organization;
import Business.Shelf.ShelfItem;
import Business.UserAccount.Readers;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BidOverRideNotification;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Minal
 */
public class BiddingPanel extends javax.swing.JPanel {

    /**
     * Creates new form BiddingPanel
     */
    
    private JPanel userProcessContainer;
    private NewBookCampaign campaign;
    private CampaignManager organization;
    private UserAccount account;
    private EcoSystem business;
    private Catagory catagory;
    private List<Readers> result;
    private Enterprise enterprise;
    BiddingPanel(JPanel userProcessContainer, NewBookCampaign campaign, CampaignManager organization, UserAccount account, EcoSystem business,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.campaign=campaign;
        this.organization=organization;
        this.account=account;
        this.enterprise=enterprise;
        this.business = business;
        this.catagory= campaign.getCatagory();
        jLabelCampName.setText("Book: " + campaign.getBook().getName() + "      Release Date: " + campaign.getReleasedate());
        result = new ArrayList<>();
        result = getList();
        result = result.stream().distinct().collect(Collectors.toList());
        populateTable();
    }
    
    private List<Readers> getList(){
        List<Readers> list= new ArrayList<>();
        for(Network n: business.getNetworkList()){
                for(Enterprise e: n.getEnterpriseDirectory().getEnterpriseList()){
                    for(Organization o: e.getOrganizationDirectory().getOrganizationList()){
                        if("Reader".equals(o.getName())){
                            for(UserAccount ua: o.getUserAccountDirectory().getUserAccountList()){
                                if(ua instanceof Readers){
                                    for(ShelfItem si:((Readers) ua).getShelf().getShelfList()){
                                        if(si != null){
                                            if(si.getTitle().getCatagory() == catagory){
                                                list.add((Readers) ua);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        return list;
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for(Readers r: result){
           // if(!enterprise.getName().equals(r.getAd().getNbc().getPubName())){
            Object[] row = new Object[4];
            row[0]= r;
            row[1] = noOfBooksInShelf(r);
            row[2] = r.getAd().getBiddingPricenbc();
            row[3] = r.getShelf().getShelfList().size();
            model.addRow(row);        
        
        }
    }
    
    public int noOfBooksInShelf(Readers r){
       int count =0; 
       for(ShelfItem si: r.getShelf().getShelfList()){
            if(si.getTitle().getCatagory() == catagory){
                count++;
            }
        }
       return count;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnBid = new javax.swing.JButton();
        jLabelCampName = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Bidding");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reader", "No Of Books in related Catagory", "Current Bidding price", "No Of books in Shelf"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        btnBid.setText("Bid (+0.25)");
        btnBid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBidActionPerformed(evt);
            }
        });

        jLabelCampName.setText("Campaign");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBid))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(320, 320, 320)
                                .addComponent(jLabel1)
                                .addGap(0, 371, Short.MAX_VALUE))
                            .addComponent(jLabelCampName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(17, 17, 17)
                .addComponent(jLabelCampName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBid)
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBidActionPerformed
        // TODO add your handling code here:
        int selectedRowValue = jTable1.getSelectedRow();
        if(selectedRowValue >= 0){
            Readers r = (Readers) jTable1.getValueAt(selectedRowValue, 0);
            if(r.getAd().getBiddingPricenbc()> 0){
            BidOverRideNotification bon = (BidOverRideNotification) r.getAd().getNbc().getOrganization().getWorkQueue().createBidOverRideNotification();
            bon.setStatus("New");
            bon.setSender(account);
            bon.setMessage("Your bid for Reader " + r + " on book " + r.getAd().getNbc().getBook() +  " has been overridden. Bid again for an advertisement space!");
            }
            r.getAd().setnbc(campaign);
            r.getAd().increaseNBCBid();
            JOptionPane.showMessageDialog(null,"Bid increased!!!");
            populateTable();
        }else{
            JOptionPane.showMessageDialog(null,"Please select a record!!!");
        }
    }//GEN-LAST:event_btnBidActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCampName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
